:ruby
  today = Date.today
  month = params[:month].nil? ? today.month : params[:month].to_i
  freight_id = params[:freight_id]
  unit_id = current_user.unit_id.nil? ? params[:unit_id] : current_user.unit_id
  unit_id = nil if unit_id == 'null'
  unit = TrstAccFreight.find(freight_id).unit if freight_id
  expenditures = TrstAccExpenditure.by_unit_id(unit_id) if unit_id
  balance = TrstAccCache.by_unit_id(unit_id).balance(month) if unit_id
  cols = 0
%p.close{:onclick => "trst.task.destroy()"}
%p.task_title= "Inventar valoric"
-if unit_id && freight_id.nil?
  %p
    %select{:onchange => "if (selectedValue(this) != '0'){trst.task.destroy();trst.task.init('#{@task.id}',
                          'query',
                          '?unit_id=#{unit_id}&month=' + selectedValue(this))}"}
      - t('month')[0..today.month].each_with_index do |m,i|
        %option{:value => i, :selected => i == month}= m
    %select{:onchange => "trst.task.destroy();trst.task.init('#{@task.id}',
                         'query',
                         '?month=#{month}&unit_id=' + selectedValue(this))"}
      %option{:value => "null"}= t("trst_acc_freight.filter.#{unit_id ? 'has' : 'no' }_unit.select")
      - TrstFirm.first.units.asc(:slug).each do |unit|
        %option{:value => unit.id, :selected => unit.id.to_s == params[:unit_id]}= unit.name[1]
  -#%p.small= t('trst_acc_freight.stats_freight.intro')
  %table.big
    %tbody.inner.stats.small
      %tr
        - %w{name pu start value ins value outs final value}.each do |cn|
          %td.ce= t("trst_acc_freight.query.#{cn}")
      - data = @object.by_unit_id(unit_id).query_value(month).values
      - sum = data.pop
      - data.each do |stock| ; cols = stock.length - 2
        %tr
          %td
            %span.link{:id  => stock.shift,:style => "white-space:nowrap"}= stock.shift
          - stock.each_with_index do |s,i|
            - unless i == 8
              %td.ri{:style => ("color:red" if i==0 && stock[8]==1)}= "%0.2f" % s
      %tr
        %td.ce.st{:colspan => "2"}= sum[1]
        %td.ri.st{:colspan => "2"}= "%0.2f" % sum[4]
        %td.ri.st{:colspan => "2"}= "%0.2f" % sum[6]
        %td.ri.st{:colspan => "3"}= "%0.2f" % sum[9]
    %tfooter
      %tr
        %td.small.ce.st{:colspan => cols} Statistică cheltuieli materiale
      %tr
        %td
        %td.small.ce.st{:colspan => "4"} Conform APP
        %td.small.ce.st{:colspan => "4"} Conform Inventar
      %tr
        %td.small Sume achitate
        %td.small.ri.st{:colspan => "3",:style => "color:blue"}= "%0.2f" % (expenditures.monthly(month).sum(:sum_out) || 0)
        %td
        %td.small.ri{:colspan => "3"}
        %td
      %tr
        %td.small Reţinut 16%
        %td.small.ri{:colspan => "3"}= "%0.2f" % (expenditures.monthly(month).sum(:sum_016) || 0)
        %td
        %td.small.ri{:colspan => "3"}
        %td
      %tr
        %td.small Reţinut 3%
        %td.small.ri{:colspan => "3"}= "%0.2f" % (expenditures.monthly(month).sum(:sum_003) || 0)
        %td
        %td.small.ri{:colspan => "3"}
        %td
      %tr
        %td.small Valoare marfă
        %td.small.ri.st{:colspan => "3",:style => "color:red"}= "%0.2f" % (expenditures.monthly(month).sum(:sum_100) || 0)
        %td
        %td.small.ri.st{:colspan => "3",:style => "color:red"}= "%0.2f" % sum[6]
        %td
      %tr
        %td.small.st Numerar:
        %td.small{:colspan => "7"}= "Sold initial <b>#{"%0.2f" % balance[0]}</b> intrări <b>#{"%0.2f" % balance[1]}</b> plăţi  <b style='color:blue'>#{"%0.2f" % balance[2]}</b> sold final <b>#{"%0.2f" % balance[3]}</b>"
- else
  %p
    %select{:onchange => "if (selectedValue(this) != '0'){trst.task.destroy();trst.task.init('#{@task.id}',
                          'query',
                          '?month=' + selectedValue(this))}"}
      - t('month')[0..today.month].each_with_index do |m,i|
        %option{:value => i, :selected => i == month}= m
    %select{:onchange => "trst.task.destroy();trst.task.init('#{@task.id}',
                         'query',
                         '?month=#{month}&unit_id=' + selectedValue(this))"}
      %option{:value => "null"}= t("trst_acc_freight.filter.#{unit_id ? 'has' : 'no' }_unit.select")
      - TrstFirm.first.units.asc(:slug).each do |unit|
        %option{:value => unit.id, :selected => unit.id.to_s == params[:unit_id]}= unit.name[1]
  %table.big
    %tbody.inner.stats.small
      %tr
        - %w{name pu start value ins value outs final value}.each do |cn|
          %td.ce= t("trst_acc_freight.query.#{cn}")
      - data = @object.query_value(month).values
      - sum = data.pop
      - data.each do |stock| ; cols = stock.length - 2
        %tr
          %td
            %span.link{:id  => stock.shift,:style => "white-space:nowrap"}= stock.shift
          - stock.each_with_index do |s,i|
            - unless i == 8
              %td.ri{:style => ("color:red" if i==0 && stock[8]==1)}= "%0.2f" % s
      %tr
        %td.ce{:colspan => 2}= sum[1]
        %td.ri.st{:colspan => "2"}= "%0.2f" % sum[4]
        %td.ri.st{:colspan => "2"}= "%0.2f" % sum[6]
        %td.ri.st{:colspan => "3"}= "%0.2f" % sum[9]
